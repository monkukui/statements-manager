# プロジェクト名
name = "local_sample"
# 問題文が存在する場所に応じてモードを選ぶ
mode = "local"

# docs mode に関する設定
[docs]
    # credentials.json の場所
    credentials_src = "./credentials.json"
    # token.pickle の場所
    token_src = "./token.pickle"

# 出力される HTML のスタイルに関する設定
[style]
    # HTML テンプレート
    template_src = "./sample/assets/template.html"
    # 出力ディレクトリにコピーすべきファイル
    copied_files = [ "./sample/assets/style.css" ]

# 問題ごとに定義を書く
[[problem]]
    # 問題 ID (必須, 出力 html 名にも使用される)
    id = "A"
    # 問題文が格納されている場所
    # mode が Docs である場合、[TODO] を記載する
    statement_src = "./sample/A/A.md"
    # 制約ファイルの出力場所
    params_path = "./output/local_sample/A_params.cpp"
# 問題制約を書く
    [problem.constraints]
        MIN_AB = 1
        MAX_AB = 1_000_000_000
        MIN_T = 1
        MAX_T = 100_000
        ALL_INPUTS_ARE_INTEGERS = "入力は全て整数で与えられる"
    [[problem.samples]]
        id = "sample_00"
        # type は "default" なら省略可能
        type = "default"
        input_path = "./sample/A/00_sample_00.in"
        output_path = "./sample/A/00_sample_00.out"

[[problem]]
    # 問題 ID (必須, 出力 html 名に使用される)
    id = "B"
    # 問題文が格納されている場所
    # mode が Docs である場合、[TODO] を記載する
    statement_src = "./sample/B/B.md"
    # 制約ファイルの出力場所
    params_path = "./output/local_sample/B_params.cpp"
    # 問題制約を書く
    [problem.constraints]
        MIN_N = 1
        MAX_N = 100_000
        N_IS_ODD = "$N$ は奇数であることが保証される"
        GIVEN_STRING_IS_LOWERCASE = "与えられる文字列は英小文字のみからなる"
    [[problem.samples]]
        id = "sample_00"
        input_path = "./sample/B/00_sample_00.in"
        output_path = "./sample/B/00_sample_00.out"
    [[problem.samples]]
        id = "sample_01"
        input_path = "./sample/B/00_sample_01.in"
        output_path = "./sample/B/00_sample_01.out"
